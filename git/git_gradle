
Find out remote repository
git config --get remote.origin.url
git remote show origin


To create a new repository on the command line
echo "# authentication-services" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/syeed-ode/authentication-services.git
git push -u origin master


…or push an existing repository from the command line
git remote add origin https://github.com/syeed-ode/authentication-services.git
git push -u origin master

##See what's changed in a staging file
git diff --staged angularJS

##See what's changed before checkin (alternative to git add -p .)
git diff

##remove trailing whitespace
sed -i 's/\s\+$//g' apacheServer

##check to see if there is training whitespace (see https://makandracards.com/makandra/11541-how-to-not-leave-trailing-whitespace-using-your-editor-or-git for more information)
git diff --check
				RubyMine

				Open Settings (Ctrl-Alt-S)
				Go to "Editor" → "General"
				At the bottom, set "Strip trailing white spaces on Save" to "Modified Lines"
				Sublime Text 2

				Open the "Preferences" menu
				Choose "File Settings – Default" (it will open Base File.sublime-settings for you)
				Set "trim_trailing_white_space_on_save": true
				Vim

				Open up your ~/.vimrc file
				Add this:

				COPY
				autocmd BufWritePre * :%s/\s\+$//e
				If that is too invasive for you, try only highlighting trailing spaces like suggested in the Vim wiki (also put this into your ~/.vimrc):

				COPY" Show trailing whitepace and spaces before a tab:
				:highlight ExtraWhitespace ctermbg=red guibg=red
				:autocmd Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/
				TextMate

				The Text bundle offers a command Remove Trailing Spaces in Document / Selection, which you can call before saving. This is not aware of git (i.e., which lines YOU have edited).
				In the bundle editor, assign it a shortcut like Cmd + Alt + Backspace.
				Update: Since 9-29-2012, TextMate2 has a callback will-save. In the above command, set 'Semantic class' to callback.document.will-save, and it will be called before saving the document.
				Git (manually)

				Git can fix whitespace in patches which you can make use of: git diff --cached --no-color > stage.diff && git apply --index -R stage.diff && git apply --index --whitespace=fix stage.diff && rm -f stage.diff. Store this as an alias and run before committing.

##Remove whitespace warning (see https://stackoverflow.com/questions/12396622/what-does-1-line-adds-whitespace-errors-mean-when-applying-a-patch)
git config apply.whitespace nowarn


##Create java library with source and test directory
gradle init --type java-library



