This is how you find your external IP using the dig command

                    				[DIG COMMAND FOR FINDING EX IP]
          	     (find external ip using idg)#: dig +short myip.opendns.com @resolver1.opendns.com

dig query types: (https://en.wikipedia.org/wiki/List_of_DNS_record_types , https://tools.ietf.org/html/rfc1035#page-12)
A	- an Internet IP address
TXT	- text protocols
MX 	- mail exchanges
NS 	- nameservers
	therefore, dig a.root-servers.net A +noall +answer   #finds ip
	           dig a.root-servers.net NS +noall +answer  #finds namw server
		   dig a.root-servers.net ANY +noall +answer #finds all of the available types


This information was gather from reading Unix and Linux System Administration Handbook, 4th Edition 
	by O'Reilly, Chapter 17: DNS: The Domain Name System.  It a collection of notes, broken down 
	by section.
*
*
*
*
****    Section 17.4 - Name Severs    ****
pg. 557
Name servers peform the following chores:
	* It answers questions about your sites hostnames and IP addresses
	* It asks about local and remote hosts for your users
	* It caches answers to these queries so it can answer faster next time
	* It transfers data between your nameservers to keep them synchronized
BIND caches the first two types of negative data: Unbound caches all four.  Each implementation 
	allows the negative cache times to be configured.]
Authoritative (root servers and TLD servers, i.e., nonrecursive) (an official representative of a zone) 
	and nonauthoritative (recursive servers; caches data from previous queries) query answers 
	describe a name servers source of data (and the completeness of the data handed out).  An 
	authoritative answer from a name server is “guaranteed’ to be accurate.  Nonauthoritative data 
	answers a query from a cache and doesn’t know if the data is still valid.  Answers from primary 
	and secondary name servers are authoritative for their own zones, but not for information they 
	may have cached. 
Recursive server returns only real answers and error messages.  It follows referrals itself; relieving 
	clients of this responsibility.
For security reasons, an organization’s externally accessible name servers should always be 
	nonrecursive. **Any local name server listed in a client’s *resolv.conf* file must be 
	recursive.**
[DNS servers also implement negative caching.  That is, they remember when a query fails and do not 
	repeat that query until the negative caching TTL value has expired.  Negative caching saves 
	answers of the following types:
	* No host or domain matches the named queried.
	* The type of data requested does not exist for this host.
	* The server to ask is not responding.
	* The server to ask is unreachable because of network problems.
*
*
*
*
****    Section 17.5 - The DNS Namespace    ****
Name servers are associated with zones, not domains. If the artist.com domain were further subdivided 
	into the subdomains engineering, marking, and booklet, then the domain atrust.com would contain 
	four zones: the original atrust.com, plus engineering.atrust.com, marketing.atrust.com, and 
	booklab.atrust.com. The atrust.com zone contains all the hosts in atrust.com except those in 
	engineering, marketing and booklab. 
The difference between a subdomains and hosts is a 
	subdomains have a name server (NS) records associated with them. 
Parent domains should check to be sure that a child domain's name servers are up and running before 
	permforming the delegation.  If the servers are not working a lame delegation results.
*
*
*
*
****    Section 17.6 - Designing Your DNS Environment    ****
	* Managing the namespace hierarchy: subdomains, multiple levels, etc.
	* Serving the authoritative data about your site to the outside world
	* Providing name lookups for your users

Namespace management - Managing the namespace hierarchy: subdomains, multiple levels, etc.
	Make sure your firewall doesn't block subdomains if they require the outside world to access them

Authoritative servers - Serving the authoritative data about your site to the outside world
	The DNS specification require at least two authoritative servers for eadh domain. Primary (an 
		official representative of a zone) and secondary (copies data from primary) servers 
		are authoritative. 
	Caching (caches data from previous queries; usually has no local zones) 
		and stub (like a secondary but copies only name server data (not host data)) servers are 
		not authortative.
	Authoritative servers keep their data synchronized by using zone transfers. Use TSIG (transaction 
		signatures) keys to authenticate and control the zone transfers from your primary server 
		to your secondary servers.
	"Split-DNS" may be preferred. This is when an authoritative query response is different depending 
		upon who is asking.  Queries from inside the network get more information than the queires 
		outside the network. This is called a view.  The bind configuration file configures the 
		view. External folks see one view, internal folks see another.

Caching servers - Providing name lookups for your users
	Recursive caching servers answer local users questions about sites on the internet.  Each computer 
		at your site should have ready access to a local caching server (configured in 
		/etc/resolv.conf).
	If the caching server dies, the network essentiall stops working for all the users that were primary 
		clients of that server.  This is why it's good to have more than one name server listed in 
		/etc/resolv.conf.

Hardware requirements - Providing name lookups for your users
	CPU is probably the least critical but it will become more critical as DNSSEC is fully 
		deployed.
	Recursive servers need enough memeory to cache all the answers your users demand.  It takes a week 
		or two to converge on a stable size at which old cache records are expiring at the rate at 
		about the same rate that new ones are being inserted.
	Authoritative servers need enough memory to store all the data for which they are authoritatve.  Most 
		sites can handle this but servers for TLD and DNS hosting sites may need either huge memories 
		or special software that facilitates storing part of the data on disk. 

DomainKeys Identify Mail (DKIM)
	Each originating email server signs the email with a private key.

Author Domain Signing Practice (ADSP)
	Allows a site to say whether it signs all, part or none of the outgoing email for each DNS zone.
	
Sender Policy Framework 

DNSSEC
	This standard adds authentication data to the DNS database and its servers. It uses public key 
		cryptography to verify the source and integrety of DNS data and uses DNS to distribute data 
		as well as host data.

DNSSEC Lookaside Validation (DLV)

Internet System Consortium (ISC)  
*
*
*
*
****    Section 17.8 - The DNS Database    ****
The zone's DNS database is a set of text files maintained on the zone's primary servers. The are sometimes refered to as zone files. They contain two types of entries: parser commands and resource records.

Commands in the zone files
	Commands either influence the way the parser interprets seqbsequent records or they expand into records themselves. 
	
	Three commands are standard in DNS and teh fourth, $GENERATE, is only found in BIND. They are:
		$ORIGIN <domain name>
		$INCLUE <filename> <origin>
		$TTL <default-ttl>
	
	Ths origin defaults to the domain name specired in the name servers configuration faile. However you can set or change it using the $ORIGIN directive. Using the relative names instad of the FQDN saves a lot of time.
	
	Many sites use $INCLUDE to keey the cryptographic keys in a file with restricted permission.  This is also use to modulize the domain. If you use the <origin> option, it overwrites the current $ORIGIN directive. So you need to reset it, either at the bottom of the <filename> or after the $INCLUDE statement.
	
	The $TTL directive sets the ttl for the records that follow it. (So, it should be at the top.) It defaults to 1 day. 
	
Resource records
	Resource records are text files for each host on your domain. The file includes the host name, the type of record, and some data values. The name field can be ommited if the value for name is the same as the line above it.
	
	Resource records are the lingua franca of DNS and are independent of configuration files that control DNS operations.  This is teh information the nonauthoritative caching servers cache about a domain or host.
	
	Each site maintians one or more pieces of the distrubuted database that make up the DNS system. Your piece of the database consist of text files that contains records for each of your hosts. These are known as "resource records". 
	
	Each zone has a set of resource records associated with it.  
		[<name>] [<ttl>] [<class>] <taype> data
	<name> identifies the entity that the entry describes (usually a host or domain). A name can be relative or absolute. Absolute name have a "." at the end of them.
	
	<ttl> speciries the time to live for the reords that follow. The default is 1 day. Modifying the ttl can aid in the maintenance process if necessary.
	
	<class> IN, for internet; CH, for ChaosNet (obsolete) used internally for name servers to identify themselves; HS, for Hesiod, a directory serveice used locally by some sites.
		Administrators and hackers use the name sever version number to identify servers in need of an upgrade. 
	
	<type> This determines the contents of the data field.  There are four groups of resource records:
		Zone records:		identify domains and name servers
			SOA	Start of authority	
			NS	Identifies ervers, delegates subdomains
		Baseic records:		map between name and addresses and map mail
			A	Name to IP address translation (IPv4)
			AAAA	Name to IP address translation (IPv6)
			MX	Mail exchange, controles email routing
			PTR	Pointer record, address to name server translation
		Security records:	add authenticatoin and signatures to zone files. Security resource records require cryptographic processing and so much be managed with software tools.
			DS	Delegation signer, a hash of child zone's key signing key
			DNSKEY	Public key for a DNS name
			NSEC
			NSEC3	Next secure (version 3), used with DNSSEC for negative answer 
			RRSIG	Signature; signed, authenticated resource record set
			DLV	Lookaside, non root trust anchor for DNS
			SSHFP	SSH Fingerprint, SSH host key allows verification of DNS
			SPF	Sender policy framework, identifies mail server inhibits forgery
			DKIM	DomainKey Identificaton Mail, verify email sender and message integrity
		Optional records:	proivde information about host or domains
			CNAME	Canonical name, alias or nickname for a site
			SRV	Services, gives location of well known services
			TXT	Text, commets or untyped information
	The order of a resource record is arbitrary. But, it's good practice to put SOA first, then NS next. Then sort by name.
	
	The secondary servers' zone file (resource records) are not managed manually, but programatically.  Who knows what order you'll get when you look at them.















